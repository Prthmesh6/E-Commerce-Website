{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstant\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config); // dispatch({\n    //   type: USER_LOGIN_SUCCESS,\n    //   payload: data,\n    // });\n    // localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","error","payload","response","message","register","name","localStorage","setItem","JSON","stringify","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","logout","removeItem"],"sources":["C:/Users/suraj/OneDrive/Desktop/Projects/Ecom/frontend/src/actions/userAction.js"],"sourcesContent":["import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstant\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // });\r\n\r\n    // localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}