{"ast":null,"code":"import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/CartConstant\";\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  }); // we can only store string in local storage so we convert json object to string\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => (dispatch, getState) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(data));\n};","map":{"version":3,"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress"],"sources":["C:/Users/suraj/OneDrive/Desktop/Projects/Ecom/frontend/src/actions/cartAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n} from \"../constants/CartConstant\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  // we can only store string in local storage so we convert json object to string\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(data));\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,0BAHF,QAIO,2BAJP;AAMA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAClE,MAAM;IAAEC;EAAF,IAAW,MAAMT,KAAK,CAACU,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;EAEAE,QAAQ,CAAC;IACPI,IAAI,EAAEV,aADC;IAEPW,OAAO,EAAE;MACPC,OAAO,EAAEJ,IAAI,CAACK,GADP;MAEPC,IAAI,EAAEN,IAAI,CAACM,IAFJ;MAGPC,KAAK,EAAEP,IAAI,CAACO,KAHL;MAIPC,KAAK,EAAER,IAAI,CAACQ,KAJL;MAKPC,YAAY,EAAET,IAAI,CAACS,YALZ;MAMPZ;IANO;EAFF,CAAD,CAAR,CAHkE,CAclE;;EACAa,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;EAC5DD,QAAQ,CAAC;IACPI,IAAI,EAAET,gBADC;IAEPU,OAAO,EAAEP;EAFF,CAAD,CAAR;EAIAc,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CANM;AAQP,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAU,CAACF,QAAD,EAAWC,QAAX,KAAwB;EACnED,QAAQ,CAAC;IACPI,IAAI,EAAER,0BADC;IAEPS,OAAO,EAAEH;EAFF,CAAD,CAAR;EAIAU,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAlC;AACD,CANM"},"metadata":{},"sourceType":"module"}