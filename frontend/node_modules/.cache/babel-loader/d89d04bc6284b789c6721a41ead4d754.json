{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\suraj\\\\OneDrive\\\\Desktop\\\\Projects\\\\Ecom\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\suraj\\\\OneDrive\\\\Desktop\\\\Projects\\\\Ecom\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\suraj\\\\OneDrive\\\\Desktop\\\\Projects\\\\Ecom\\\\frontend\\\\src\\\\components\\\\PayPalCheckoutButton.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState } from \"react\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { payOrder } from \"../actions/orderActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nvar PaypalCheckoutButton = function PaypalCheckoutButton(props) {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var product = props.product;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      paidFor = _useState2[0],\n      setPaidFor = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var successPaymentHandler = function successPaymentHandler(paymentResult) {\n    console.log(id, paymentResult);\n    dispatch(payOrder(id, paymentResult));\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"Thank You for purchasing from Eazy2Code\");\n  }\n\n  if (error) {\n    alert(error);\n  }\n\n  return /*#__PURE__*/React.createElement(PayPalScriptProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PayPalButtons, {\n    onClick: function onClick(data, actions) {\n      var hasAlreadyBoughtCourse = false;\n\n      if (hasAlreadyBoughtCourse) {\n        setError(\"You Already bough this course\");\n        return actions.reject();\n      } else {\n        return actions.resolve();\n      }\n    },\n    createOrder: function createOrder(data, actions) {\n      return actions.order.create({\n        purchase_units: [{\n          description: product.description,\n          amount: {\n            value: product.price\n          }\n        }]\n      });\n    },\n    onApprove: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, action) {\n        var order;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return action.order.capture();\n\n              case 2:\n                order = _context.sent;\n                console.log(\"order\", order);\n                successPaymentHandler(order);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    onCancel: function onCancel() {},\n    onError: function onError(err) {\n      setError(err);\n      console.log(\"PayPal Checkout onError\", err);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PaypalCheckoutButton;","map":{"version":3,"names":["React","useState","PayPalScriptProvider","PayPalButtons","payOrder","useDispatch","useSelector","useParams","PaypalCheckoutButton","props","id","product","dispatch","paidFor","setPaidFor","error","setError","successPaymentHandler","paymentResult","console","log","alert","data","actions","hasAlreadyBoughtCourse","reject","resolve","order","create","purchase_units","description","amount","value","price","action","capture","err"],"sources":["C:/Users/suraj/OneDrive/Desktop/Projects/Ecom/frontend/src/components/PayPalCheckoutButton.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from \"../actions/orderActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst PaypalCheckoutButton = (props) => {\r\n  const { id } = useParams();\r\n\r\n  const { product } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [paidFor, setPaidFor] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(id, paymentResult);\r\n    dispatch(payOrder(id, paymentResult));\r\n    setPaidFor(true);\r\n  };\r\n\r\n  if (paidFor) {\r\n    alert(\"Thank You for purchasing from Eazy2Code\");\r\n  }\r\n\r\n  if (error) {\r\n    alert(error);\r\n  }\r\n\r\n  return (\r\n    <PayPalScriptProvider>\r\n      <PayPalButtons\r\n        onClick={(data, actions) => {\r\n          const hasAlreadyBoughtCourse = false;\r\n          if (hasAlreadyBoughtCourse) {\r\n            setError(\"You Already bough this course\");\r\n            return actions.reject();\r\n          } else {\r\n            return actions.resolve();\r\n          }\r\n        }}\r\n        createOrder={(data, actions) => {\r\n          return actions.order.create({\r\n            purchase_units: [\r\n              {\r\n                description: product.description,\r\n                amount: {\r\n                  value: product.price,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        }}\r\n        onApprove={async (data, action) => {\r\n          const order = await action.order.capture();\r\n          console.log(\"order\", order);\r\n          successPaymentHandler(order);\r\n        }}\r\n        onCancel={() => {}}\r\n        onError={(err) => {\r\n          setError(err);\r\n          console.log(\"PayPal Checkout onError\", err);\r\n        }}\r\n      />\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default PaypalCheckoutButton;\r\n"],"mappings":";;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;EAAA,iBACvBF,SAAS,EADc;EAAA,IAC9BG,EAD8B,cAC9BA,EAD8B;;EAAA,IAG9BC,OAH8B,GAGlBF,KAHkB,CAG9BE,OAH8B;EAKtC,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EALsC,gBAORJ,QAAQ,CAAC,KAAD,CAPA;EAAA;EAAA,IAO/BY,OAP+B;EAAA,IAOtBC,UAPsB;;EAAA,iBAQZb,QAAQ,CAAC,IAAD,CARI;EAAA;EAAA,IAQ/Bc,KAR+B;EAAA,IAQxBC,QARwB;;EAUtC,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,aAAD,EAAmB;IAC/CC,OAAO,CAACC,GAAR,CAAYV,EAAZ,EAAgBQ,aAAhB;IACAN,QAAQ,CAACR,QAAQ,CAACM,EAAD,EAAKQ,aAAL,CAAT,CAAR;IACAJ,UAAU,CAAC,IAAD,CAAV;EACD,CAJD;;EAMA,IAAID,OAAJ,EAAa;IACXQ,KAAK,CAAC,yCAAD,CAAL;EACD;;EAED,IAAIN,KAAJ,EAAW;IACTM,KAAK,CAACN,KAAD,CAAL;EACD;;EAED,oBACE,oBAAC,oBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IACE,OAAO,EAAE,iBAACO,IAAD,EAAOC,OAAP,EAAmB;MAC1B,IAAMC,sBAAsB,GAAG,KAA/B;;MACA,IAAIA,sBAAJ,EAA4B;QAC1BR,QAAQ,CAAC,+BAAD,CAAR;QACA,OAAOO,OAAO,CAACE,MAAR,EAAP;MACD,CAHD,MAGO;QACL,OAAOF,OAAO,CAACG,OAAR,EAAP;MACD;IACF,CATH;IAUE,WAAW,EAAE,qBAACJ,IAAD,EAAOC,OAAP,EAAmB;MAC9B,OAAOA,OAAO,CAACI,KAAR,CAAcC,MAAd,CAAqB;QAC1BC,cAAc,EAAE,CACd;UACEC,WAAW,EAAEnB,OAAO,CAACmB,WADvB;UAEEC,MAAM,EAAE;YACNC,KAAK,EAAErB,OAAO,CAACsB;UADT;QAFV,CADc;MADU,CAArB,CAAP;IAUD,CArBH;IAsBE,SAAS;MAAA,sEAAE,iBAAOX,IAAP,EAAaY,MAAb;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACWA,MAAM,CAACP,KAAP,CAAaQ,OAAb,EADX;;cAAA;gBACHR,KADG;gBAETR,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,KAArB;gBACAV,qBAAqB,CAACU,KAAD,CAArB;;cAHS;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAF;;MAAA;QAAA;MAAA;IAAA,GAtBX;IA2BE,QAAQ,EAAE,oBAAM,CAAE,CA3BpB;IA4BE,OAAO,EAAE,iBAACS,GAAD,EAAS;MAChBpB,QAAQ,CAACoB,GAAD,CAAR;MACAjB,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCgB,GAAvC;IACD,CA/BH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF;AAqCD,CA7DD;;AA+DA,eAAe5B,oBAAf"},"metadata":{},"sourceType":"module"}